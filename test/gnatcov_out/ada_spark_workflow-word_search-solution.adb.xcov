/home/chouteau/src/github/alire/ada_spark_workflow/src/ada_spark_workflow-word_search-solution.adb:
100% of 18 lines covered
100% statement coverage (18 out of 18)

Coverage level: stmt
   1 .: with Ada.Text_IO;
   2 .: with Ada.Integer_Text_IO;
   3 .: with Ada.Strings.Fixed;
   4 .: 
   5 .: package body Ada_SPARK_Workflow.Word_Search.Solution
   6 .: with SPARK_Mode
   7 .: is
   8 .: 
   9 .:    --------------
  10 .:    -- Add_Word --
  11 .:    --------------
  12 .: 
  13 .:    procedure Add_Word (This           : in out Instance;
  14 .:                        W              :        Word.Instance;
  15 .:                        XS, YS, XE, YE :        Positive)
  16 .:    is
  17 .:    begin
  18 +:       Word_Placement_Vector.Append (This.Placements, (W, XS, YS, XE, YE));
  19 .:    end Add_Word;
  20 .: 
  21 .:    -----------
  22 .:    -- Print --
  23 .:    -----------
  24 .: 
  25 .:    procedure Print (This : Instance) is
  26 .:       use Ada.Text_IO;
  27 .:       use Ada.Integer_Text_IO;
  28 .:       use Ada.Strings.Fixed;
  29 .: 
  30 +:       Int_Width : constant := 3;
  31 .: 
  32 +:       Max_Word_Len : Natural := 0;
  33 .: 
  34 .:    begin
  35 .: 
  36 +:       for P of This.Placements loop
  37 .:          pragma Loop_Invariant (Max_Word_Len <= Word.Max_Length);
  38 .:          pragma Assert (P.W.To_Str'Length <= Word.Max_Length);
  39 .: 
  40 +:          Max_Word_Len := Natural'Max (Max_Word_Len, P.W.To_Str'Length);
  41 .: 
  42 .:       end loop;
  43 .: 
  44 .:       declare
  45 +:          Title_Len : constant Positive := Max_Word_Len + 4 * Int_Width + 10;
  46 .:       begin
  47 +:          Put_Line (Head ("--- Solution ", Title_Len, '-'));
  48 .:       end;
  49 .: 
  50 +:       for P of This.Placements loop
  51 +:          Put (Head (P.W.To_Str, Max_Word_Len, ' ') & " (");
  52 +:          Put (P.XS, Int_Width);
  53 +:          Put (", ");
  54 +:          Put (P.YS, Int_Width);
  55 +:          Put (") (");
  56 +:          Put (P.XE, Int_Width);
  57 +:          Put (", ");
  58 +:          Put (P.YE, Int_Width);
  59 +:          Put (")");
  60 +:          New_Line;
  61 .:       end loop;
  62 .:    end Print;
  63 .: 
  64 .: end Ada_SPARK_Workflow.Word_Search.Solution;
